{"version":3,"sources":["components/TestComp.js","App.js","reportWebVitals.js","index.js"],"names":["TestComp","useState","Board","setBoard","useEffect","fetch","then","res","json","groups","forEach","element","groupName","standings","className","length","map","stand","index","positionLabel","style","display","flexDirection","alignItems","justifyContent","team","abbreviation","played","won","lost","tied","noResult","netRunRate","points","App","Pivot","PivotItem","headerText","Label","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RA+DeA,MA5Df,WAAoB,MAEUC,mBAAS,IAFnB,mBAETC,EAFS,KAEFC,EAFE,KAmBhB,OAhBAC,qBAAU,WACNC,MAAM,sEAELC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAI1BA,EAAKC,OAAOC,SAAQ,SAAAC,GACS,KAAtBA,EAAQC,WAEPT,EAASQ,EAAQE,mBAK/B,IAEE,gCACI,8CACA,wBAAOC,UAAU,kBAAjB,UACI,gCACI,+BACI,qCACA,sCACA,qCACA,qCACA,sCACA,sCACA,qCACA,qCACA,0CAGR,gCAGAZ,EAAMa,OACNb,EAAMc,KAAI,SAACC,EAAOC,GAAR,OAEV,cADA,CACA,gBACI,6BAAKD,EAAME,gBACX,6BAAI,sBAAKC,MAAO,CAACC,QAAQ,OAAQC,cAAc,MAAOC,WAAW,SAAUC,eAAe,UAAtF,UAAiG,qBAAKV,UAAS,mBAAcG,EAAMQ,KAAKC,gBAAuBT,EAAMQ,KAAKC,kBAC9K,6BAAKT,EAAMU,SACX,6BAAKV,EAAMW,MACX,6BAAKX,EAAMY,OACX,6BAAKZ,EAAMa,OACX,6BAAKb,EAAMc,WACX,6BAAKd,EAAMe,aACX,6BAAKf,EAAMgB,WATNf,EAAM,MAUN,cCbVgB,MArCf,WAEE,OACE,qBAAKpB,UAAU,MAAf,SACE,eAACqB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,WAAW,OAAtB,SACE,cAACC,EAAA,EAAD,qBAEF,cAACF,EAAA,EAAD,CAAWC,WAAW,eAAtB,SACE,cAAC,EAAD,MAEF,cAACD,EAAA,EAAD,CAAWC,WAAW,WAAtB,SACE,cAACC,EAAA,EAAD,yBAEF,cAACF,EAAA,EAAD,CAAWC,WAAW,SAAtB,SACE,cAACC,EAAA,EAAD,6BCRKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d2e5ca61.chunk.js","sourcesContent":["import React, {useState,useEffect} from 'react'\r\nimport '../styles/TestComp.css';\r\n\r\nfunction TestComp() {\r\n    //const [Standings, setStanding] = useState({});\r\n    const [Board, setBoard] = useState([]);\r\n    useEffect(()=>{\r\n        fetch('https://cricketapi.platform.iplt20.com/tournaments/22399/standings')\r\n        //fetch('https://cricketapi.platform.iplt20.com/tournaments/18790/standings')\r\n        .then(res => res.json()).then(json => {\r\n            //setStanding(json);\r\n            // console.log(json);\r\n            // console.log(Standings);\r\n            json.groups.forEach(element => {\r\n                if(element.groupName === \"\"){\r\n                    // console.log(element.standings);\r\n                    setBoard(element.standings);\r\n                    // console.log(Board);\r\n                }\r\n            });\r\n        });\r\n    },[])\r\n    return (\r\n        <div>\r\n            <h1>Points Table</h1>\r\n            <table className=\"standings_table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Pos</th>\r\n                        <th>Team</th>\r\n                        <th>Pld</th>\r\n                        <th>Won</th>\r\n                        <th>Lost</th>\r\n                        <th>Tied</th>\r\n                        <th>N/R</th>\r\n                        <th>NRR</th>\r\n                        <th>Pts</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n            \r\n            {\r\n                Board.length ? \r\n                Board.map((stand, index) => \r\n                //const cname = {'teamLogo', stand.team.abbreviation}; \r\n                <tr key={index+1}>\r\n                    <td>{stand.positionLabel}</td>\r\n                    <td><div style={{display:\"flex\", flexDirection:\"row\", alignItems:\"center\", justifyContent:\"center\"}}><div className={`tLogo40x ${stand.team.abbreviation}`}></div>{stand.team.abbreviation}</div></td>\r\n                    <td>{stand.played}</td>\r\n                    <td>{stand.won}</td>\r\n                    <td>{stand.lost}</td>\r\n                    <td>{stand.tied}</td>\r\n                    <td>{stand.noResult}</td>\r\n                    <td>{stand.netRunRate}</td>\r\n                    <td>{stand.points}</td>\r\n                </tr>) : null\r\n            }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestComp\r\n\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport { Label, Pivot, PivotItem } from '@fluentui/react';\nimport TestComp from './components/TestComp';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Pivot>\n        <PivotItem headerText=\"Home\">\n          <Label>Home</Label>\n        </PivotItem>\n        <PivotItem headerText=\"Points Table\">\n          <TestComp />\n        </PivotItem>\n        <PivotItem headerText=\"Fixtures\">\n          <Label>Fixtures</Label>\n        </PivotItem>\n        <PivotItem headerText=\"Squads\">\n          <Label>Squads</Label>\n        </PivotItem>\n      </Pivot>\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <TestComp/>\n      </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}